diff --git a/library/cloud.js b/library/cloud.js
index 8991d38..6f8f887 100644
--- a/library/cloud.js
+++ b/library/cloud.js
@@ -61,15 +61,16 @@ async function sendEmail_useAmazon(c) {
 		}
 	}
 	let result, error, success = true
-	q.tick = Now()
 
+	let t1 = Now()
 	try {
 		result = await ses.sendEmail(q).promise()
 		//sanity check to set success false
 	} catch (e) { error = e; success = false }
+	let t2 = Now()
 
-	let t = Now()
-	return {c, q, p: {success, result, error, tick: t, duration: t - q.tick}}
+	q.tick = t1
+	return {c, q, p: {success, result, error, tick: t2, duration: t2 - t1}}
 }
 
 async function sendEmail_useSendgrid(c) {
@@ -102,15 +103,16 @@ async function sendText_useAmazon(c) {
 		Message: messageText,//must be 160 characters or less
 	}
 	let result, error, success = true
-	q.tick = Now()
 
+	let t1 = Now()
 	try {
 		result = await sns.publish(p).promise()
 		//sanity check to set success false
 	} catch (e) { error = e; success = false }
+	let t2 = Now()
 
-	let t = Now()
-	return {c, q, p: {success, result, error, tick: t, duration: t - q.tick}}
+	q.tick = t1
+	return {c, q, p: {success, result, error, tick: t2, duration: t2 - t1}}
 }
 
 async function sendText_useTwilio(c) {
@@ -264,7 +266,8 @@ function prepareLog(status, type, label, headline, watch) {
 	let s = stringify(b)//prepare the body, stringified, s; use our wrapped stringify that can look into error objects!
 	s = redact(s)//mark out secrets; won't change the length, won't mess up the stringified format for datadog's parse
 	let size = s.length//byte size of body, this is how datadog bills us
-	s = replaceOne(s, '‹SIZE›', `‹${size}›`)//insert the length in the first line of the message
+	s         = replaceOne(s,         '‹SIZE›', `‹${size}›`)//insert the length in the first line of the message
+	d.message = replaceOne(d.message, '‹SIZE›', `‹${size}›`)//also get that into the message text for the other sinks
 
 	let c = {}//c is our call with complete information about our fetch to datadog
 	c.body = b//c.body is the http request body, as an object, for our own information
@@ -324,7 +327,7 @@ test(async () => { if (!cloudLogSimulationMode) return//only run these in simula
 /*
 next to do now
 [x]deployed, get the six dogs from the two doors, all at once
-[]deployed, toss each place, one at a time
+[x]deployed, toss each place, one at a time
 []local node, send the four messages
 []deployed, send the four messages
 
@@ -337,7 +340,24 @@ and check datadog, amazon, and twilio dashboards throughout!
 //let's test this stuff with node on the command line
 export async function snippet(card) {
 	log('hi from snippet')
-	
+	log(look(card))
+
+
+	function style(text) {
+		return `<html><body><p style="font-size: 18px; color: gray; font-family: 'SF Pro Rounded', 'Noto Sans Rounded', sans-serif;">${text}</p></body></html>`
+	}
+	let text = Sticker().all+" ~ Hello, Sandro, it's Kevin, emailing you through SES."
+
+
+	let result = await sendEmail_useAmazon({
+		fromName: card.fromName,
+		fromEmail: card.fromEmail,
+		toEmail: card.toEmail2,
+		subjectText: 'hello1',
+		bodyText: text,
+		bodyHtml: style(text)
+	})
+	await awaitLogAudit('snippet sent amazon email', {result})
 
 
 
diff --git a/wrapper.js b/wrapper.js
index c076890..43b0a1f 100644
--- a/wrapper.js
+++ b/wrapper.js
@@ -1,9 +1,9 @@
 export const wrapper = {
 	name: 'cold3',
-	tick: 1727976016083,
-	hash: 'FITUL4ZWNVJ2R4MREY6VTI2WLKJLEYNAEQNCGGLHONH6ES33ZIUQ',
+	tick: 1727980815154,
+	hash: 'H43X3SYUMQMBD5ZFNJWVZQRZ7SNMKXBGWRGUMKPUW4C2J23TCNAQ',
 	codeFiles: 107,
-	codeSize: 513574,
+	codeSize: 514277,
 	totalFiles: 112,
-	totalSize: 8735417
+	totalSize: 8736120
 }
diff --git a/wrapper.txt b/wrapper.txt
index 69bd47e..fc3ad3c 100644
--- a/wrapper.txt
+++ b/wrapper.txt
@@ -31,7 +31,7 @@ DDPW25PTIZKHMV7LYJ2VYRTR7BU5YWAN6QK3X5CQIZOG44LTWBEA icarus/icarus.txt:855
 PVYJGVSIJAN2VZPITCCA4LKFE5J5QM66XX6EJPYHO3YQXGN3DZXQ icarus/package-lock.json:62697
 BIPRZLJWMGCHBTGCMZA7KHY5N6FFYWLKLH63XAYZ2FUMYTPOJTKA icarus/package.json:651
 6NIF2DH54MZAUEOIHWTQK4IU37KF6VDBYLNWWK7HZ24C4NWNARHQ icarus/vite.config.js:620
-SZ7RXFJ74RLPDRDW7ZJTN34MVN3WNGC47KMDOLQZ5G5UTPLUOE5Q library/cloud.js:18280
+XHQU5NDXI4JQJXXUIZUDKEYMJ2YEHT4HPTWXHRZC7Q6PAECHGJKQ library/cloud.js:18983
 CZSBWNNFDLLXDOGNABX6OI537GCRQVLMGHNYLJD5NBSTQ6GPZSIQ library/cloud.txt:17284
 WC4HZ56DIVS7BPUMW7L3FPQE7TBYAS52P2CWOPWN4AHUPXM3GYJA library/cloud2.js:326
 C2NEHGLMNCQPOM5FWSWUCGBZV5PBMCBAV7L7AGUGY7GGMCRK4U5A library/database.js:16718
