




2024sep25
notes refactoring the shrinkwrap system
when this area settles down, go through and turn some of these into documentation in seal.js or sticker.js
and other just delete




/*


yeah, right in here actually compose
	name: 'cold3',
	tick: 1727070618821,
	hash: 'VQFO2KNLUTPQ5TPAXUX4DPDB5H4XX2NQLPOSIUUEGBHCQH6XLPLA',
into sticker: like 'cold3.2024sep23.VQFO2KN'
also  have when: '2024sep23' in case you just want that

function formatDateUTC(t) {
	let date = new Date(t)
	let year = date.getUTCFullYear()
	let month = date.toLocaleString('en', { month: 'short', timeZone: 'UTC' }).toLowerCase()
	let day = String(date.getUTCDate()).padStart(2, '0')
	return year+month+day
}




*/

/*
notes, ttd

$ npm run seal
seal.js, this file runs, generating
wrapper.txt, this file of hashes, paths, and sizes, which gets hashed to
wrapper.js, which contains the date and hash that seals the package
code in the app includes sticker.js to show version numbers



library0 includes sticker.js, which gets it in code everywhere else
and library0 has a function which formats the sticker into text like

library0 has function shrinkwrapVersion which turns name, tick, hash into text for the user like
"cold3.2024sep5.OJW3O2W"
put this on an /about page, for instance


this is also where you can show how much of this disk has filled:

   84,837 bytes is library0, just for context
  468,982 bytes total code (avoided package-lock.json, gif, png) so you're nearly a third full already!
1,474,560 bytes floppy disk


A 3.5" floppy disk is 31% full

 ____________________
| |cold3           | |
|.|________________|H|
| |________________| |
| |________________| |
| |________________| |
| |________________| |
| |________________| |
|                    |
|    ____________    |
|   |   |  _     |   |
|   |   | | |    |   |
|   |   | |_|    | V |
|___|___|________|___|


 ____________________
| |cold3           | |
|.|XXXXXXXXXXXXXXXX|H|
| |XXXXXXXXXXXXXXXX| |
| |XXXXXXXXXXXX____| |
| |________________| |
| |________________| |
| |________________| |
|                    |
|    ____________    |
|   |   |  _     |   |
|   |   | | |    |   |
|   |   | |_|    | V |
|___|___|________|___|



something like that maybe


*/







/*
$ npm run seal
$ git commit
$ npm run deploy




todo, rename
the whole thing is the shrinkwrap system
seal is the verb, $ node seal, same length as test
wrapper is what gets overwritten for each seal
sticker is the information on the sticker on the wrapper seal

./seal.js
./wrapper.txt
./wrapper.js
./library/sticker.js

so then seal is the verb
wrapper is the outside wrapper which gets generated each time
and sticker is the information on and about the wrapper

and then capitilize the function so you can do
let sticker = Sticker()












*/











/*
	let k = wrapper
	k.nowTick = Date.now()
	k.nowText = sayTick(k.nowTick)

	k.sealedHash = k.hash.substring(0, 7)
	k.sealedWhen = sayDate(k.tick)

	k.codeSizeDiskPercent = Math.round((k.codeSize * 100) / floppyDiskCapacity)

	let environment = senseEnvironment()
	k.where = environment.title
	k.whereTags = environment.tagsArray
	k.isLocal = k.where.includes('Local')
	k.isCloud = k.where.includes('Cloud')

	k.what =             k.sealedWhen+'.'+k.sealedHash
	k.all  = k.where+'.'+k.sealedWhen+'.'+k.sealedHash+'.'+k.nowText
	return k
*/




/*
what if sticker returned

what
all - those two useful strings
call - now and tag
core - just the facts, ma'am

verbose - everything
essential - what you want to log, parse it later
invocation
*/








/*
[I.] files and flow:

./seal.js             $ npm run seal to generate the next two files:
./wrapper.txt         first, a file manifest
./wrapper.js          from that, hash and date of the manifest, covering the whole thing
./library/sticker.js  sticker.js imports wrapper.js, adding environment detection, a tick and tag, and friendly text

[II.] use and properties:

let k = sticker()
k: {

	name: "cold3"
	tick: 1727133528737
	hash: "GXQ6YRNZBA3S72XRZ7YERRAMK2DEKY5EEOKPJMRWUR65ZSFOX7KQ"

these three come from wrapper and were set during seal

	sealedHash: "GXQ6YRN"
	sealedWhen: "2024sep23"

composed here, sealedHash is just the prefix
and sealedWhen is tick as a readable date, the day the shrinkwrap was sealed

	nowTick: 1727140381335
	nowText: "Mon07:13p01.335s"

these are when you called sticker(), not when the shrinkwrap was sealed
so, this is not a part of the identity of the version of code that's running
it's convenient for callers of sticker() to get a single Now() tick count

	totalFiles: 110
	totalSize: 8681167
	codeFiles: 105
	codeSize: 466135
	codeSizeDiskPercent: 32

some statistics about the code contents
the first four are from wrapper; disk percent is computed here

	where: "LocalVite"
	whereTags: ["Achr", "Asaf", "Awin", "Docu", "Loca", "Self", "Stor", "Wind"]
	isLocal: true
	isCloud: false

details related to how we sense the local running environment
where is the detected environment, and whereTags show the detected tags that led us to that guess
isLocal and isCloud are from sortinng the different where locations

	where: "LocalVite"
	what:            "2024sep23.GXQ6YRN"
	all:   "LocalVite.2024sep23.GXQ6YRN.Mon06:09p17.741s"

where, what, and when this code is running, all together in one pretty short string of text
}
*/









//another way to do these is they're in library0 as pass-through
/*

export { sayDate, sayTick, defined, hasText } from './sticker.js'

//this pass-through export is also an import!

*/











